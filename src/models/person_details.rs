/*
 * Overseerr API
 *
 * This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 
 *
 * The version of the OpenAPI document: v1.33.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PersonDetails {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<f64>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "deathday", skip_serializing_if = "Option::is_none")]
    pub deathday: Option<String>,
    #[serde(rename = "knownForDepartment", skip_serializing_if = "Option::is_none")]
    pub known_for_department: Option<String>,
    #[serde(rename = "alsoKnownAs", skip_serializing_if = "Option::is_none")]
    pub also_known_as: Option<Vec<String>>,
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<String>,
    #[serde(rename = "biography", skip_serializing_if = "Option::is_none")]
    pub biography: Option<String>,
    #[serde(rename = "popularity", skip_serializing_if = "Option::is_none")]
    pub popularity: Option<String>,
    #[serde(rename = "placeOfBirth", skip_serializing_if = "Option::is_none")]
    pub place_of_birth: Option<String>,
    #[serde(rename = "profilePath", skip_serializing_if = "Option::is_none")]
    pub profile_path: Option<String>,
    #[serde(rename = "adult", skip_serializing_if = "Option::is_none")]
    pub adult: Option<bool>,
    #[serde(rename = "imdbId", skip_serializing_if = "Option::is_none")]
    pub imdb_id: Option<String>,
    #[serde(rename = "homepage", skip_serializing_if = "Option::is_none")]
    pub homepage: Option<String>,
}

impl PersonDetails {
    pub fn new() -> PersonDetails {
        PersonDetails {
            id: None,
            name: None,
            deathday: None,
            known_for_department: None,
            also_known_as: None,
            gender: None,
            biography: None,
            popularity: None,
            place_of_birth: None,
            profile_path: None,
            adult: None,
            imdb_id: None,
            homepage: None,
        }
    }
}

