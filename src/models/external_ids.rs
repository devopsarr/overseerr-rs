/*
 * Overseerr API
 *
 * This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr. 
 *
 * The version of the OpenAPI document: v1.33.2
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalIds {
    #[serde(rename = "facebookId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub facebook_id: Option<Option<String>>,
    #[serde(rename = "freebaseId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub freebase_id: Option<Option<String>>,
    #[serde(rename = "freebaseMid", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub freebase_mid: Option<Option<String>>,
    #[serde(rename = "imdbId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub imdb_id: Option<Option<String>>,
    #[serde(rename = "instagramId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub instagram_id: Option<Option<String>>,
    #[serde(rename = "tvdbId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tvdb_id: Option<Option<f64>>,
    #[serde(rename = "tvrageId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tvrage_id: Option<Option<f64>>,
    #[serde(rename = "twitterId", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub twitter_id: Option<Option<String>>,
}

impl ExternalIds {
    pub fn new() -> ExternalIds {
        ExternalIds {
            facebook_id: None,
            freebase_id: None,
            freebase_mid: None,
            imdb_id: None,
            instagram_id: None,
            tvdb_id: None,
            tvrage_id: None,
            twitter_id: None,
        }
    }
}

